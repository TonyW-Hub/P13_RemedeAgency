swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/bankbooks:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Returns all User account
      description: Returns a map of user accounts
      parameters:
      - in: header
        name: Authorization
        description: Attach Bearer JWT token
        type: string
        required: true
      produces:
        - application/json
      responses:
        "200":
          description: User accounts retrieved successfully
          schema:
            type: array
            xml:
              wrapped: true
            items:
              $ref: "#/definitions/Bankbook"
  /user/{bankbookId}/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Return User transactions
      description: Return an array of user transactions filter by current mounth
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          type: string
          required: true
        - in: path
          name: bankbookId
          description: ID of bankbook to returns transactions
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: User transactions retrieved successfully
          schema:
            type: array
            xml:
              wrapped: true
            items:
              $ref: '#/definitions/Transaction'
        "400":
          description: Invalid status value
        '500':
          description: Internal Server Error
  /user/{bankbookId}/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Find transaction by ID
      description: Return a single transaction
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: bankbookId
          description: ID of current bankbook
          required: true
          type: integer
        - name: transactionId
          in: path
          description: ID of transaction to return
          required: true
          type: integer
      produces:
         - application/json
      responses:
        "200":
          description: transaction was successfully
          schema:
            $ref: '#/definitions/Transaction'
        "400":
          description: Invalid ID supplied
        "404":
          description: Transaction not found
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Update an existing transaction
      description: Update an existing transaction by ID
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: bankbookId
          description: ID of current bankbook
          required: true
          type: integer
        - name: transactionId
          in: path
          description: ID of transaction to return
          required: true
          type: integer
        - in: body
          name: body
          description: Update user transaction attributes
          required: true
          schema:
            type: object
            properties:
              category:
                type: string
                example: "Food"
              notes:
                type: string
      responses:
        "200":
          description: update transaction was successfully
          schema:
            $ref: "#/definitions/Transaction"
        "400":
          description: Invalid ID supplied
        "404":
          description: Transaction not found
        '405':
          description: Validation exception
        '500':
          description: Internal server error
  /user/{bankbookId}/{transactionId}/informations:
    delete:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Delete informations an existing transaction
      description: Delete informations an existing transaction by ID
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: bankbookId
          required: true
          type: integer
        - in: path
          name: transactionId
          required: true
          type: integer
      responses:
        "400":
          description: Invalid ID supplied
        "404":
          description: Transaction not found
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
  Bankbook:
    type: object
    properties:
      accountId:
        type: string
      title:
        type: string
      description:
        type: string
      currency:
        type: string
        example: "EUR"
      amount:
        type: integer
        format: int64
        example: 2310
  Transaction:
    type: object
    properties:
      transactionId:
        type: string
      title:
        type: string
      description:
        type: string
      amount:
        type: integer
        format: int64
        example: 2000
      currency:
        type: string
        example: 'EUR'
      category:
        type: string
        example: "Food"
      notes:
        type: string
      transactionType:
        type: string
        example: "Electronic"
      createAt:
        type: string
        format: date-time
      updateAt:
        type: string
        format: date-time
      bankbookId:
        type: string
